USE AB_TREINAMENTO_Mariana;
GO

CREATE OR ALTER PROCEDURE  cadastro_movimento(

@CODCOLIGADA VARCHAR(3),    
@CODAGENCIA  VARCHAR(5) ,    
@NROCONTA  VARCHAR(7),
@VALOR NUMERIC(17,2),
@MORA NUMERIC(17,2),            
@MULTA NUMERIC(17,2),
@DESCONTO NUMERIC(17,2),
@DESCRICAO NUMERIC(17,2)
)
AS
BEGIN --come�o de uma consulta DEFINE BLOCO DE CODIGO
  -- o top serve pra eu trazer a quantidade de linhas que eu qro da consulta por exemplo 
	IF EXISTS (SELECT TOP 1 1 FROM CONTAS WHERE CODCOLIGADA = @CODCOLIGADA AND CODAGENCIA = @CODAGENCIA AND NROCONTA = @NROCONTA)
	-- BLZ?blz enfim esse verifica se existir no m�nimo 1 registro em contas conforme a pk que eu passei, o select me retorna 1
	BEGIN
	 --inclus�ao na tabela movimentos
	  INSERT INTO MOVIMENTOS (CODCOLIGADA,CODAGENCIA,NROCONTA,DATAMOVIMENTO,
      VALOR,MORA,MULTA,DESCONTO,DESCRICAO)
	  VALUES (@CODCOLIGADA,@CODAGENCIA,@NROCONTA,GETDATE(),@VALOR,@MORA,
	  @MULTA,@DESCONTO,@DESCRICAO)
		
	END

END

EXEC cadastro_movimento '01','002','2346',1200.0,
20.0,0.0, 100.0, 1200;


--Realize uma nova inserção utilizando a stored procedure criada no exercício 14, porém, para outra CONTA

EXEC cadastro_movimento '04','005','2546',600.0,
210.0,0.0, 150.0, 10;


--Insira uma check nos campos VALOR, MORA, MULTA e DESCONTO da tabela MOVIMENTOS para não
--permitir valores negativos

ALTER TABLE Movimentos
ADD CHECK (Valor>=0);

ALTER TABLE Movimentos
ADD CHECK (MORA>=0);

ALTER TABLE Movimentos
ADD CHECK (MULTA>=0);

ALTER TABLE Movimentos
ADD CHECK (DESCONTO>=0);


INSERT INTO MOVIMENTOS (CODCOLIGADA,CODAGENCIA,NROCONTA,NROMOVIMENTO,DATAMOVIMENTO,
      VALOR,MORA,MULTA,DESCONTO,DESCRICAO)
VALUES('3','003','1434','12',GETDATE(),130.0,3.0,10.0,23.0,10.0)


INSERT INTO MOVIMENTOS (CODCOLIGADA,CODAGENCIA,NROCONTA,NROMOVIMENTO,DATAMOVIMENTO,
      VALOR,MORA,MULTA,DESCONTO,DESCRICAO)
VALUES('1','003','1234','13',GETDATE(),180.0,5.0,00.0,83.0,0.0)

--Realize um consulta que retorne o menor, o maior e a média do campo VALOR da tabela MOVIMENTOS
SELECT * FROM MOVIMENTOS WHERE VALOR = (SELECT MIN(VALOR) FROM MOVIMENTOS);

SELECT * FROM MOVIMENTOS WHERE VALOR = (SELECT MAX(VALOR) FROM MOVIMENTOS);

SELECT AVG(VALOR) FROM MOVIMENTOS;

SELECT  MIN(VALOR) AS 'MENOR',
		MAX(VALOR) AS 'MAIOR',
		AVG(VALOR) AS 'MEDIA'
FROM MOVIMENTOS


--Realize uma consulta que retorne os campos CPFCNPJ, NOME da tabela PESSOA, e o campo
--DATAMOVIMENTO da tabela MOVIMENTOS, desde que seja o maior valor, que a conta seja do tipo
--poupança (INDPOUPANCA = S) e que a pessoa seja cliente (INDCLIENTEBANCO = S)


SELECT TOP 1 C.CODPESSOA,P.NOME,C.INDPOUPANCA as contaPoupanca, P.CPFCNPJ,P.INDCLIENTEBANCO as clienteBanco,(SELECT MAX(VALOR) FROM MOVIMENTOS) AS VALOR
FROM CONTAS C LEFT JOIN PESSOAS P ON C.CODPESSOA = P.CODPESSOA 
LEFT JOIN MOVIMENTOS M ON M.CODAGENCIA = C.CODAGENCIA
GROUP BY C.CODPESSOA,P.NOME,C.INDPOUPANCA, P.CPFCNPJ,M.DATAMOVIMENTO,P.INDCLIENTEBANCO,M.VALOR HAVING C.INDPOUPANCA ='S' AND P.INDCLIENTEBANCO = 'S' 

